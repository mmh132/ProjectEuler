import sys
sys.setrecursionlimit(100000)

# def isqrt(x):
#     if x == 1: return 1
#     a = x >> 1
#     b = x
#     while a < b:
#         c = (a + x//a) >> 1
#         a,b = c,a
#     return b

W, H = 10000, 10000
# fibs = [1,2]
# while fibs[-1] < 1.42*10000:
#     fibs.append(fibs[-1] + fibs[-2])
# print(fibs)

legalpaths = [(0, 1), (0, 2), (0, 3), (0, 5), (0, 8), (0, 13), (0, 21), (0, 34), (0, 55), (0, 89), (0, 144), (0, 233), (0, 377), (0, 610), (0, 987), (0, 1597), (0, 2584), (0, 4181), (0, 6765), (1, 0), (2, 0), (3, 0), (3, 4), (4, 3), (5, 0), (5, 12), (8, 0), (12, 5), (13, 0), (16, 30), (21, 0), (30, 16), (33, 44), (34, 0), (39, 80), (44, 33), (55, 0), (80, 39), (89, 0), (105, 208), (110, 600), (135, 352), (144, 0), (145, 348), (152, 345), (208, 105), (233, 0), (260, 273), (272, 546), (273, 260), (345, 152), (348, 145), (352, 135), (366, 488), (377, 0), (414, 448), (448, 414), (488, 366), (546, 272), (555, 4144), (600, 110), (610, 0), (715, 1428), (819, 4100), (987, 0), (1216, 2280), (1356, 3955), (1428, 715), (1485, 6600), (1597, 0), (1869, 3740), (2280, 1216), (2584, 0), (2772, 6171), (3740, 1869), (3955, 1356), (4059, 5412), (4100, 819), (4144, 555), (4181, 0), (4389, 5148), (4896, 9790), (5148, 4389), (5412, 4059), (6171, 2772), (6600, 1485), (6765, 0), (9790, 4896)]
# for i in range(W+1):
#     for j in range(H+1):
#         if isqrt(i*i+j*j)**2 == i*i+j*j:
#             if isqrt(i*i + j*j) in fibs:
#                 legalpaths.append((i,j))
# print(legalpaths)
legalpaths.reverse()

memo = dict()
def bfdp(x,y):
    if x > W or y > W: return 0
    if x == W and y == H: return 1
    if (x,y) in memo: return memo[(x,y)]
    rv = 0
    for i in legalpaths:
        rv += bfdp(x + i[0], y + i[1])
    rv %= (10**9+7)
    memo[(x,y)] = rv
    return rv 

print(bfdp(0,0))